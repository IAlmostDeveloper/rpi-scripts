#!/usr/bin/python3

import time
import datetime
import RPi.GPIO as GPIO
import Adafruit_GPIO.SPI as SPI
import Adafruit_SSD1306

from PIL import Image
from PIL import ImageDraw
from PIL import ImageFont

import subprocess
import board
import busio
import adafruit_bmp280

light_sensor = 17

GPIO.setmode(GPIO.BCM)
GPIO.setup(light_sensor, GPIO.IN)

i2c = busio.I2C(board.SCL, board.SDA)
sensor = adafruit_bmp280.Adafruit_BMP280_I2C(i2c, address=0x76)

disp = Adafruit_SSD1306.SSD1306_128_64(rst=None, i2c_address=0x3D)
disp.begin()
disp.clear()
disp.display()

width = disp.width
height = disp.height
image = Image.new('1', (width, height))

draw = ImageDraw.Draw(image)
draw.rectangle((0,0,width,height), outline=0, fill=0)

padding = -2
top = padding
bottom = height-padding
x = 0

font = ImageFont.load_default()

count = 0
while True:
    draw.rectangle((0,0,width,height), outline=0, fill=0)

    cmd = "vcgencmd measure_temp"
    TEMP = subprocess.check_output(cmd, shell = True)
    cmd = "top -bn1 | grep load | awk '{printf \"CPU Load: %.2f\", $(NF-2)}'"
    CPU = subprocess.check_output(cmd, shell = True )
    cmd = "free -m | awk 'NR==2{printf \"Mem: %s/%sMB %.2f%%\", $3,$2,$3*100/$2 }'"
    MemUsage = subprocess.check_output(cmd, shell = True )
    cmd = "df -h | awk '$NF==\"/\"{printf \"Disk: %d/%dGB %s\", $3,$2,$5}'"
    Disk = subprocess.check_output(cmd, shell = True )
    Pressure = 'Pressure: ' + str(round(sensor.pressure, 2))
    Temperature = 'Temperature: ' + str(round(sensor.temperature,2))
    # Altitude = sensor.altitude
    draw.text((x, top),       str(TEMP),  font=font, fill=255)
    draw.text((x, top + 8),       str(CPU),  font=font, fill=255)
    draw.text((x, top + 16),       str(MemUsage),  font=font, fill=255)
    draw.text((x, top + 24),       str(Disk),  font=font, fill=255)
    draw.text((x, top + 32),     'P:' + str(Pressure), font=font, fill=255)
    draw.text((x, top + 40),    'T:' + str(Temperature),  font=font, fill=255)
    # draw.text((x, top + 48),    'A:' + str(Altitude),  font=font, fill=255)
    draw.text((x, top + 48), 'Light' if GPIO.input(light_sensor)==GPIO.LOW else 'Dark', font=font, fill=255)
    disp.image(image)
    disp.display()
    time.sleep(.1)
    
    dateNow = datetime.datetime.now()
    if count==60:
        count = 0
        log = open('/home/pi/sensors_log.txt', 'a')
        log.write(dateNow.strftime("%Y-%m-%d-%H.%M.%S") + ';' + Temperature + ';' + Pressure + ';' + str(TEMP) + '\n')
        log.close()
    else:
        count+=1
